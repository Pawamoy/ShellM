#!/bin/bash

err() {
  echo "$0: ${FUNCNAME[1]}: $@" >&2
}

git_clone() {
  # $1: git repository url
  # $2: target path
  git clone -q --progress --depth=1 "$1" "$3"
}

git_clone_branch() {
  # $1: git repository url
  # $2: branch/tag
  # $3: target path
  git clone -q --progress "$1" -b "$2" "$3"
}

git_list_remote_tags() {
  # $1: git repository url
  git ls-remote --tags "$1" | grep -o 'tags/.*$' | sed 's/^tags\///g'
}

to_git_url() {
  # $1: package name
  local provider providers
  case $1 in
    gh:*|github.com:*) echo "git@github.com:${1#*:}" ;;
    gl:*|gitlab.com:*) echo "git@gitlab.com:${1#*:}" ;;
    bb:*|bitbucket.com:*) echo "git@bitbucket.com:${1#*:}" ;;
    https://*) echo "$1" ;;
    git[+@]*) echo "$1" ;;
    *)
      providers="${SHELLM_INSTALL_PROVIDERS:-github.com gitlab.com bitbucket.com}"
      err "no provider found in $1, trying all: ${providers}"
      for provider in ${providers}; do
        to_git_url "${provider}:$1"
      done
      return 2
    ;;
  esac
  return 0
}

install_latest() {
  # $1: package name
  local git_url
  git_url="$(to_git_url "$1")"
  if [ $? -eq 2 ]; then
    while read -r url; do
      err "trying to clone ${url}"
      if git_clone "${url}" 2>/dev/null; then
        err "successfully cloned ${url}"
        break
      else
        err "failed to clone ${url}"
      fi
    done <<<"${git_url}"
  else
    err "trying to clone ${git_url}"
    if git_clone "${git_url}" 2>/dev/null; then
      err "successfully cloned ${git_url}"
    else
      err "failed to clone ${git_url}"
    fi
  fi
}
