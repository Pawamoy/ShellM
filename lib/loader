## @file loader.sh
## @brief Loading machinery and C-like macros for library inclusion in shell scripts
##
## These functions try to imitate the pre-processor directives in C:
## ifndef, define and include. The 'exclude' function purpose is to let
## you unset functions and variables from your current interactive shell.

## @fn int define (name, value)
## @brief Defines an environment variable in the current shell
## @param $1 Variable name
## @param [$2] Variable content (default: 'def')
## @return Code: 1 if no args or error while affectation, 0 otherwise
define()  {
	[ $# -ge 1 ] && eval $1=${2:-def} || return 1;
}

## @fn bool ndef (varname)
## @brief Tests if a variable is set (non-empty)
## @param $1 Variable name
## @return true if empty (unset), false otherwise
ndef()    {
	[[ $# -ge 1 && -z "$(eval echo \$$1)" ]] || return 1;
}

## @fn int include (filename)
## @brief Includes content of a library file in the current shell
## @param $1 Names of library files to include
## @return Code: 1 (and exits if subshell) if no args or error while including contents, 0 otherwise
## @return Echo: message on stderr if return code 1
include() {
	[ -f "$shellm/lib/$1" ] && . "$shellm/lib/$1" || {
		[ $# -ge 1 ] && echo "include: error while including $1 from $0" >&2;
		[ "$0" != "bash" ] && exit 1 || return 1;
	}
}

## @fn int exclude (filename, ...)
## @brief Exclude content of library files from the current shell
## @param $1-N Names of library files to exclude
## @return Code: 0
exclude() {
	local __RE_SH_FUN1='^[[:space:]]*[a-z_]\w*[ ]*([ ]*)'
	local __RE_SH_FUN2='^[[:space:]]*function [a-z_]\w*[ ]*'
	while [ $# -ne 0 ]; do
		if [ -f "$shellm/lib/$1" ]; then
			unset -f $(
				grep -i -e "$__RE_SH_FUN1" -e "$__RE_SH_FUN2" "$shellm/lib/$1" |\
				sed 's/function //g' | sed 's/([ ]*)//g' | sed 's/{//g'
			)
			unset $(grep -o 'define [ ]*[a-z_]\w*' "$shellm/lib/$1" | sed 's/define //g')
		fi
		shift
	done
}

## @fn int upd-lib (filename, ...)
## @brief Update content of a library file in the current shell
## @param $1-N Names of library files to reinclude
## @return Last include return code
upd-lib() {
	local f
	exclude "$@"
	for f; do
		include $f
	done
}

export -f define
export -f ndef
export -f include
# export -f exclude  # we don't use these two inside scripts
# export -f upd-lib

complete -W "$(/bin/ls $shellm/lib)" include exclude upd-lib
