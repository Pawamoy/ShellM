#!/usr/bin/env bash

has_cmd() {
  command -v "$1" &>/dev/null
}

var_is_cmd() {
  declare -n _var=$1
  has_cmd "${_var}"
}

error() {
  >&2 printf "\e[31m$*\e[0m\n"
}

warning() {
  >&2 printf "\e[33m$*\e[0m\n"
}

options="$(getopt -n shellm-autoload -o "fhilr" -l "edit,force,help,interactive,list,rm" -- "$@")"
eval set -- "${options}"

while (( $# != 0 )); do
  case $1 in
    -e|--edit) edit=1 ;;
    -f|--force) force=1 ;;
    -h|--help) help=1 ;;
    -i|--interactive) interactive=1 ;;
    -l|--list) list=1 ;;
    -r|--remove) remove=1 ;;
    --) shift; break ;;
  esac
  shift
done

if (( help == 1 )); then
  _help
  exit 0
fi

autoload_file="${SHELLM_AUTOLOAD_FILE:-${XDG_CONFIG_DIR:-${HOME}/.config}/shellm/autoload}"

if (( edit == 1 )); then
  if var_is_cmd EDITOR; then
    editor=${EDITOR}
  elif has_cmd editor; then
    editor=editor
  elif has_cmd xdg-open; then
    editor=xdg-open
  elif has_cmd open; then
    editor=open
  else
    error "shellm-autoload: No editor found. Please either:
    - set EDITOR environment variable (export EDITOR=vim)
    - set 'editor' alternative (update-alternative --set editor /usr/bin/vim)'
    - install open/xdg-open command (apt-get install xdg-utils)"
    exit 1
  fi

  ${editor} "${autoload_file}"
  exit $?
fi

if (( list == 1 )); then
  column -t "${autoload_file}"
  exit 0
fi

if (( remove == 1 )); then
  sed_command=""
  for p; do
    sed_command+="\?^$p( #i|\$)?d;"
  done
  sed -i -r "${sed_command}" "${autoload_file}"
else
  if (( interactive == 1 )); then
    suffix=" #interactive"
  fi
  for p; do
    if ! shellm locate "$p" >/dev/null && (( force != 1 )); then
      warning "shellm-autoload: no such file or directory in LIBPATH: $p"
      warning "  Use the -f / --force flag to add it anyway."
    else
      if ! grep -qE "^$p( #i|\$)" "${autoload_file}" && (( force != 1 )); then
        echo "$p${suffix}" >> "${autoload_file}"
      else
        warning "shellm-autoload: library '$p' is already autoloaded"
        warning "  Use the -f / --force flag to add it anyway."
      fi
    fi
  done
fi
