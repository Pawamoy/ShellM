#!/usr/bin/env bash

## \brief Script used to initialize shellm.

## \desc This script is a simple shortcut.
## It actually runs `basher package-path shellm/core/lib/shellm.sh`.

## \example Source shellm into your script:
## \example-code bash
##   source $(shellm init path)
##   # or . $(shellm init path)

## \usage shellm-init [-|path] [SHELL]

if (( $# == 0 )); then
  # shellcheck disable=SC2088
  case "${BASHER_SHELL}" in
    bash)
      if [ -f "${HOME}/.bashrc" ] && [ ! -f "${HOME}/.bash_profile" ]; then
        profile='~/.bashrc'
      else
        profile='~/.bash_profile'
      fi
    ;;
    zsh) profile='~/.zshrc' ;;
    ksh) profile='~/.profile' ;;
    fish) profile='~/.config/fish/config.fish' ;;
    *) profile='your profile' ;;
  esac

  { echo "# Load shellm automatically by appending"
    echo "# the following to ${profile}:"
    echo
    case "${BASHER_SHELL}" in
      fish)
        echo 'status --is-interactive; and source (shellm init -|psub)'
      ;;
      *)
        # shellcheck disable=SC2016
        echo '. "$(shellm init)"'
      ;;
      esac
    echo
  } >&2

  exit 1
fi

shellm_path="$(basher package-path shellm/core)"

case "$1" in
  -h|--help)
    cat "${shellm_path}/help/shellm-init.txt"
    exit 0
  ;;
esac

shellm_lib="${shellm_path}/lib/shellm.${BASHER_SHELL}"

if [ ! -f "${shellm_lib}" ]; then
  echo "Your shell (${BASHER_SHELL}) is not supported yet." >&2
  echo "Please open an issue at https://github.com/shellm-org/core/issues." >&2
  exit 1
fi

echo "${shellm_lib}"
